{{ $dciphers := "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4" }}
{{ $v := dict "$" $ }}
{{ $v := merge $v ( dict "Env"                           .Env) }}
{{ $v := merge $v ( dict "certspath"                   ( .Env.SSL_CERTS_PATH | default "/certs" )                                     ) }}
{{ $v := merge $v ( dict "cert"                        ( .Env.SSL_CERT_PATH | default ( print $v.certspath  "/cert.crt" ))            ) }}
{{ $v := merge $v ( dict "key"                         ( .Env.SSL_KEY_PATH  | default ( print $v.certspath  "/cert.key" ))            ) }}
{{ $v := merge $v ( dict "diffie"                      ( .Env.NGINX_DH_FILE | default ( print $v.certspath  "/dhparams.pem" ))        ) }}
{{ $v := merge $v ( dict "nossl"                       ( .Env.NO_SSL | default "" )                                                  ) }}
{{ if not ( .Env.NO_FORCE_SSL | empty ) }}
{{ $v := merge $v ( dict "noforcessl" .Env.NO_FORCE_SSL ) }}
{{ else }}
{{ $v := merge $v ( dict "noforcessl" ((eq $v.nossl "1") | ternary "0" "1" )) }}
{{ end }}
{{ $v := merge $v ( dict "nostatics"                   ( .Env.NO_STATICS | default "" )                                               ) }}
{{ $v := merge $v ( dict "loglevel"                    ( .Env.NGINX_LOGLEVEL | default "crit" )                                       ) }}
{{ $v := merge $v ( dict "real_ip_from_recursive"      ( .Env.NGINX_REAL_IP_FROM_RECURSIVE | default "on" )                           ) }}
{{ $v := merge $v ( dict "real_ip_from"                ( .Env.NGINX_REAL_IP_FROM | default "10.0.0.0/8 172.16.0.0/12 192.168.0.0/16" )) }}
{{ $v := merge $v ( dict "ssl_ciphers"                 ( .Env.NGINX_SSL_CIPHERS | default $dciphers )                                 ) }}
{{ $v := merge $v ( dict "ssl_protocols"               ( .Env.NGINX_SSL_PROTOCOLS | default "TLSv1 TLSv1.1 TLSv1.2" )                 ) }}
{{ $v := merge $v ( dict "client_max_body_size"        ( .Env.NGINX_BODY_SIZE | default "1000G" )                                     ) }}
{{ $v := merge $v ( dict "zope_address"                ( .Env.RBINS_ZOPE_ADDRESS | default "host.docker.internal" )                   ) }}
{{ $v := merge $v ( dict "vhostblock"                  ( list "commonproxypass" )                                                     ) }}

{{ define "proxypass" }}
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
{{ end }}

{{ define "vhostcommon" }}
    server_name {{ .name }} {{ .alias | default "" }};
    server_name_in_redirect off;
    {{ if .Env.NGINX_HTTP_PROTECT_PASSWORD }}
    auth_basic            "Restricted";
    auth_basic_user_file  /etc/htpasswd-protect;
    {{ end }}
    gzip on;
    # adds a Vary: Accept-Encoding in the response, and it's a valid varying
    # info as we may not gzip depending on the value of Accept-Encoding
    gzip_vary on;
    gzip_proxied any;
    # note that text/html is always on by default
    gzip_types
        text/plain text/css text/xml text/javascript text/cache-manifest application/json
        application/x-javascript application/xml application/xml+rss application/rss+xml
        application/javascript application/atom+xml application/ld+json application/manifest+json
        application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf
        application/x-web-app-manifest+json image/svg+xml application/xhtml+xml
        application/vnd.mapbox-vector-tile font/opentype;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_comp_level 4;
    # feed the map variables for ssl up
    set $http_x_ssl                $http_x_ssl_resolved;
    set $http_x_forwarded_proto    $http_x_forwarded_proto_resolved;
    set $http_x_forwarded_ssl      $http_x_forwarded_ssl_resolved;
    set $http_x_forwarded_protocol $http_x_forwarded_protocol_resolved;
    # set $scheme                  $forwarded_ssl_scheme;
    # proxy params headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header x-forwarded-proto $http_x_forwarded_proto_resolved;
    proxy_set_header x-forwarded-ssl $http_x_forwarded_ssl_resolved;
    proxy_set_header x-forwarded-protocol $http_x_forwarded_protocol_resolved;
    proxy_buffering off;
    proxy_http_version 1.1;
    # for multisearch vhost !
    root /var/www;
    index index.html;
{{ if has "redirect" .vhostblock }}
rewrite ^/(.*) {{.redirect}}/$1 permanent;
{{ end }}
{{ if has "commonproxypass" .vhostblock }}
    location /zmiroot/ {
        rewrite ^/zmiroot/(.*)$    /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/VirtualHostRoot/_vh_zmiroot/$1 break;
        proxy_pass  http://{{ .upstream }};
        {{ template "proxypass" . }}
    }
    location / {
        rewrite ^(.*)$             /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/$1 break;
        proxy_pass http://{{ .upstream }};
        {{ template "proxypass" . }}
    }
{{ end }}
{{ if has "mars" .vhostblock }}
    rewrite ^/specimen(.*) $forwarded_ssl_scheme://darwin.naturalsciences.be/darwin/search/view/id$1 permanent;
    location = /multisite-search/index.html { add_header "Cache-Control" no-cache; }
    location /multisite-search {
        try_files $uri$args $uri$args/ /multisite-search/index.html;
        add_header "Cache-Control" "no-cache";
    }

    location /ssh-anthropology {
        rewrite ^/ssh-anthropology(.*)$         /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-anthropology$1 break;
        proxy_pass  http://zopeserver_ssh_entropology;
    }

    location /ssh-geology-bibliography {
        rewrite ^/ssh-geology-bibliography(.*)$ /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-geology-bibliography$1 break;
        proxy_pass  http://zopeserver_ssh_geology_bibliography;
    }
    location /ssh-geology-archives {
        rewrite ^/ssh-geology-archives(.*)$              /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-geology-archives$1 break;
        proxy_pass  http://zopeserver_ssh_geology_archives;
    }
    location /ssh-geology {
        rewrite ^/ssh-geology(.*)$              /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-geology$1 break;
        proxy_pass  http://zopeserver_ssh_geology;
    }
    location /ssh-entomology {
        rewrite ^/ssh-entomology(.*)$           /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-entomology$1 break;
        proxy_pass  http://zopeserver_ssh_entomology;
    }
    location /ssh-entomo/ {
        rewrite ^/ssh-entomo/(.*)$              /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-entomo/$1 break;
        proxy_pass  http://zopeserver_ssh_entomology;
    }
    location /ssh-vertebrates {
        rewrite ^/ssh-vertebrates(.*)$          /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-vertebrates$1 break;
        proxy_pass  http://zopeserver_ssh_vertebrates;
    }
    location /ssh-invertebrates {
        rewrite ^/ssh-invertebrates(.*)$        /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-invertebrates$1 break;
        proxy_pass  http://zopeserver_ssh_invertebrates;
    }
    location /ssh-paleontology {
        rewrite ^/ssh-paleontology(.*)$         /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-paleontology$1 break;
        proxy_pass  http://zopeserver_ssh_paleontology;
    }
    location /ssh-projects {
        rewrite ^/ssh-projects(.*)$             /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-projects$1 break;
        proxy_pass  http://zopeserver_ssh_projects;
    }
    location /cpb {
        rewrite ^/cpb(.*)$                      /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_cpb$1 break;
        proxy_pass  http://zopeserver_cpb;
    }
    location /ssh-habitats {
        rewrite ^/ssh-habitats(.*)$             /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_ssh-habitats$1 break;
        proxy_pass  http://zopeserver_habitats;
    }
    location /plone5 {
        rewrite ^/plone5(.*)$ /VirtualHostBase/$forwarded_ssl_scheme/$server_name:$forwarded_server_port/{{.plonesite}}/VirtualHostRoot/_vh_plone5$1 break;
        proxy_pass http://zopeserver_plone5;
    }

{{ end }}
{{ end }}

{{ define "http" }}
server {
    listen 80;
    error_log  /var/log/nginx/{{.name}}-error.log  {{ .loglevel }};
    access_log /var/log/nginx/{{.name}}-access.log custom_combined if=$method_loggable;
    {{ template "vhostcommon" . }}
}
{{ end }}
{{ define "ssl" }}
server {
    listen 443 ssl;
    error_log  /var/log/nginx/ssl-{{.name}}-error.log  {{ .loglevel }};
    access_log /var/log/nginx/ssl-{{.name}}-access.log custom_combined if=$method_loggable;
    ssl_ciphers             {{ .ssl_ciphers }};
    ssl_protocols           {{ .ssl_protocols }};
    ssl_certificate         {{ .cert }};
    ssl_certificate_key     {{ .key }};
    ssl_session_cache  shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_dhparam {{ .diffie }};
    {{ template "vhostcommon" . }}
}
{{ end }}

{{ define "vhost" }}
{{ template "http" . }}
{{ template "ssl"  . }}
{{ end }}

{{ if .Env.RBINS_COLLECTIONS | default "" | eq "1" }}
upstream zopeserver_mars { server {{ $v.zope_address }}:26130; }
upstream zopeserver_ssh_entomology { server {{ $v.zope_address }}:26131; }
upstream zopeserver_ssh_geology { server {{ $v.zope_address }}:26132; }
upstream zopeserver_ssh_geology_archives { server {{ $v.zope_address }}:26144; }
upstream zopeserver_ssh_invertebrates { server {{ $v.zope_address }}:26133; }
upstream zopeserver_ssh_vertebrates { server {{ $v.zope_address }}:26134; }
upstream zopeserver_ssh_paleontology { server {{ $v.zope_address }}:26135; }
upstream zopeserver_ssh_entropology { server {{ $v.zope_address }}:26136; }
upstream zopeserver_ssh_projects { server {{ $v.zope_address }}:26137; }
upstream zopeserver_cpb { server {{ $v.zope_address }}:26138; }
upstream zopeserver_habitats { server {{ $v.zope_address }}:26139; }
upstream zopeserver_ssh_geology_bibliography { server {{ $v.zope_address }}:26140; }
upstream zopeserver_nagoya { server {{ $v.zope_address }}:26142; }
upstream zopeserver_digit { server {{ $v.zope_address }}:26141; }
upstream zopeserver_ltp { server {{ $v.zope_address }}:26143; }
upstream zopeserver_plone5 { server {{ $v.zope_address }}:8080; }
#
{{ template "vhost" ( $v | merge ( dict "name" "new-mars.naturalsciences.be"    "alias" "staging-new-mars.naturalsciences.be"     "vhostblock" ( list "redirect" ) "redirect" "https://mars.naturalsciences.be"  )) }}
#
{{ template "vhost" ( $v | merge ( dict "name" "collections.naturalsciences.be" "alias" "mars.naturalsciences.be staging-collections.naturalsciences.be"  "vhostblock" ( list "commonproxypass" "mars" )  "upstream" "zopeserver_mars"   "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "nagoya.naturalsciences.be"      "alias" "staging-nagoya.naturalsciences.be"                                                                               "upstream" "zopeserver_nagoya" "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "digit.naturalsciences.be"       "alias" "staging-digit.naturalsciences.be"                                                                                "upstream" "zopeserver_digit"  "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "ltp.naturalsciences.be"         "alias" "staging-ltp.naturalsciences.be"                                                                                  "upstream" "zopeserver_ltp"    "plonesite" "Plone" )) }}
{{ template "vhost" ( $v | merge ( dict "name" "cetaf.naturalsciences.be"       "alias" "staging-cetaf.naturalsciences.be"                                                                                "upstream" "zopeserver_cpb"    "plonesite" "Plone" )) }}
{{ end }}
